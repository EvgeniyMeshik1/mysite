{"remainingRequest":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Works\\qwsain_dev\\qwsain_dev\\src\\components\\login\\Login.vue?vue&type=style&index=0&id=08b4fdc3&lang=scss&scoped=true","dependencies":[{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\src\\components\\login\\Login.vue","mtime":1663553906000},{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\css-loader\\dist\\cjs.js","mtime":1668329591352},{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1668329633615},{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\postcss-loader\\src\\index.js","mtime":1668329606285},{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1668329581075},{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668329581239},{"path":"E:\\Works\\qwsain_dev\\qwsain_dev\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1668329613896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLmVycm9yLWZlZWRiYWNrew0KICAgICAgICBjb2xvcjpyZWQ7DQogICAgICAgIGZvbnQtc2l6ZTogMC45NWVtOw0KICAgIH0NCg0K"},{"version":3,"sources":["E:\\Works\\qwsain_dev\\qwsain_dev\\src\\components\\login\\Login.vue"],"names":[],"mappings":";IA2KI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB","file":"E:/Works/qwsain_dev/qwsain_dev/src/components/login/Login.vue","sourceRoot":"","sourcesContent":["<template>\r\n \r\n  <form @click.prevent>\r\n     <h1>تسجيل الدخول</h1>\r\n     <br/>\r\n    <div class=\"row g-3 aling-items-center\">\r\n      <div class=\"col-auto d-block mx-auto\">\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"ادخل البريد الالكتروني\"\r\n          v-model=\"state.email\"\r\n        />\r\n        <span class=\"error-feedback\" v-if=\"v$.email.$error\"> البريد الالكتروني مطلوب</span>\r\n      </div>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"row g-3 aling-items-center\">\r\n      <div class=\"col-auto d-block mx-auto\">\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"ادخل كلمة المرور\"\r\n          v-model=\"state.pass\"\r\n        />\r\n        <span class=\"error-feedback\" v-if=\"v$.pass.$error\"> كلمة المرور مطلوبة</span>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row g-3 aling-items-center\">\r\n      <div class=\"col-auto d-block mx-auto\">\r\n           \r\n        &nbsp;&nbsp;&nbsp;\r\n        &nbsp;&nbsp;&nbsp;\r\n        <button type=\"submit\" @click=\"userLogin()\" class=\"btn btn-info\">\r\n          سجل الدخول\r\n        </button>\r\n        <br/>\r\n        <br/>\r\n\r\n        <button\r\n          type=\"button\"\r\n          @click=\"redirectTo({ val: 'PasswordRest' })\"\r\n            class=\"btn btn-link\"\r\n        >\r\n          اعادة تعيين كلمة المرور\r\n        </button>\r\n        \r\n        <button\r\n          type=\"button\"\r\n          @click=\"redirectTo({ val: 'SignupEmail' })\"\r\n          class=\"btn btn-link\"\r\n        >\r\n          تسجيل مستخدم جديد \r\n        </button>\r\n         \r\n        \r\n         \r\n         <br/>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row g-3 align-items-center\">\r\n      <div class=\"col-auto d-block mx-auto\">\r\n        {{userNotFoundErr}}\r\n      </div>\r\n     \r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { mapActions } from \"vuex\";\r\nimport useValidate  from \"@vuelidate/core\";\r\nimport { required, email } from \"@vuelidate/validators\";\r\nimport { reactive, computed } from \"vue\";\r\n \r\n \r\n\r\nexport default {\r\n  components: { \r\n    \r\n    },\r\n  name: \"Login\",\r\n  //compistion API\r\n  setup() {\r\n    //data\r\n    const state = reactive({\r\n      pass: \"\",\r\n      email: \"\",\r\n    });\r\n    //validations\r\n    const rules = computed(() => {\r\n      return {\r\n        email: { required, email },\r\n        pass: { required },\r\n      };\r\n    });\r\n\r\n    const v$ = useValidate(rules, state);\r\n    return {\r\n      state,\r\n      v$,\r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      userNotFoundErr:\"\",\r\n      name:\"غير مسجل\"\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    console.log('we are here 2');\r\n    let user = localStorage.getItem(\"user-info\");\r\n     if(user){\r\n             this.userName = JSON.parse(user).user_name;\r\n      this.name = JSON.parse(user).name;\r\n             \r\n        }\r\n\r\n        if(this.name!=\"غير مسجل\")\r\n        {\r\n            this.redirectTo({val:\"Home\"});\r\n        }\r\n  },\r\n  methods: {\r\n    //signUpPage(){\r\n    //  this.$router.push({name:\"Signup\"});\r\n    // }\r\n\r\n    ...mapActions([\"redirectTo\"]),\r\n\r\n    async userLogin() {\r\n      this.v$.$validate();\r\n      if (!this.v$.$error) {\r\n        console.log(\"Form Validated Successfully\");\r\n\r\n        console.log(\"dddd\");\r\n        let result = await axios.get(\r\n          `http://localhost:3000/api/user/${this.state.email}/${this.state.pass}`\r\n        );\r\n        //let result = await axios.get('http://localhost:3000/api/user/');\r\n\r\n         \r\n        console.log(\"dddd\");\r\n        console.log(result.data);\r\n        console.log(result.status);\r\n        if (result.status == 200 && result.data.length > 0) {\r\n          //console.log(\"logged in \");\r\n          localStorage.setItem(\"user-info\", JSON.stringify(result.data[0]));\r\n          this.redirectTo({val:\"Home\"});\r\n        } else {\r\n         // console.log(\"No User Found\");\r\n         this.userNotFoundErr = \"البريد الالكتروني أو كلمة المرور غير صحيح\";\r\n        }\r\n\r\n      } else {\r\n        console.log(\"Form vlidation Failed\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped >\r\n    .error-feedback{\r\n        color:red;\r\n        font-size: 0.95em;\r\n    }\r\n\r\n</style>"]}]}